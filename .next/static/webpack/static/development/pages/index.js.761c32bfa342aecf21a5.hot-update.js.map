{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.761c32bfa342aecf21a5.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Layout from '../components/Layout.js';\r\nimport Main from '../components/Main.js';\r\nimport Home from './about';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Link from 'next/link';\r\n\r\nconst APIkey = 'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.searchPhotos = this.searchPhotos.bind(this);\r\n    this.scrollPhotos = this.scrollPhotos.bind(this);\r\n    this.getPhotos = this.getPhotos.bind(this);\r\n    this.resetPhotos = this.resetPhotos.bind(this);\r\n\r\n    this.state = {\r\n      images: [],\r\n      query: '',\r\n      pageNum: 1,\r\n      isLoading: true\r\n    }\r\n  }\r\n\r\n/*\r\n  static async getInitialProps() {\r\n    const res = await fetch(`https://api.unsplash.com/photos/?client_id=${APIkey}&per_page=30`)\r\n    const images = await res.json()\r\n    return { images }\r\n  }\r\n*/\r\n  async getPhotos (pageNum = 1) {\r\n    fetch(`https://api.unsplash.com/photos/?client_id=${APIkey}&per_page=30&page=${pageNum}`)\r\n      .then(res => res.json())\r\n      .then(jsonData => {\r\n        this.setState({ \r\n          images : jsonData,\r\n          pageNum,\r\n          isLoading: false\r\n        });\r\n      })\r\n      .catch(error => console.error('Ошибка при запросе данных: ', error));      \r\n  }\r\n\r\n  async searchPhotos (query, pageNum = 1) {\r\n    const fetchResult =  await fetch(`https://api.unsplash.com/search/photos/?client_id=${APIkey}&query=${query}&page=${pageNum}&per_page=30`)\r\n    const images = await fetchResult.json();\r\n    console.log(images);\r\n    if (images.total === 0) {\r\n      this.setState({ \r\n        images: images.results,\r\n        query,\r\n        pageNum,\r\n        isLoading: false\r\n      })\r\n      \r\n    } else {\r\n      sessionStorage.setItem('photos-query', query);\r\n      sessionStorage.setItem('photos-pageNum', pageNum);\r\n      this.setState({ \r\n        images: images.results,\r\n        query,\r\n        pageNum,\r\n        isLoading: false\r\n      })\r\n    }\r\n  }\r\n  \r\n  async scrollPhotos (evt) {\r\n    let pageNum = this.state.pageNum;\r\n    if (evt.target.id === 'prev30' && pageNum > 1) pageNum -= 1;\r\n    if (evt.target.id === 'next30') pageNum += 1;\r\n    if (this.state.query) {\r\n      await this.searchPhotos(this.state.query, pageNum)\r\n    } else {\r\n      await this.getPhotos(pageNum);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const query = sessionStorage.getItem('photos-query');\r\n    const pageNum = sessionStorage.getItem('photos-pageNum');\r\n    if (query && pageNum) {\r\n      await this.searchPhotos(query, pageNum);\r\n    } else {\r\n      await this.getPhotos(1);\r\n    }\r\n  }\r\n\r\n  async resetPhotos () {\r\n    sessionStorage.setItem('photos-query', '');\r\n    sessionStorage.setItem('photos-pageNum', 0);\r\n    this.setState({\r\n      query: '',\r\n      pageNum: 1\r\n    })\r\n    await this.getPhotos(1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout \r\n        searchPhotos = {this.searchPhotos} \r\n        scrollPhotos = {this.scrollPhotos} \r\n        resetPhotos = {this.resetPhotos} >\r\n        {\r\n          this.state.isLoading\r\n\t\t\t\t\t\t? <h3>Loading...</h3>\r\n\t\t\t\t\t\t: <Main data = {this.state.images} apiKey = {APIkey}/>\r\n        }\r\n        \r\n      </Layout>\r\n    )\r\n  }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAPA;AAaA;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAOA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;AAAA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;AACA;AACA;AACA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AAAA;;;;;;AACA;AACA;;;;;;;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AAFA;;AAIA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAzGA;AACA;;;;;A","sourceRoot":""}