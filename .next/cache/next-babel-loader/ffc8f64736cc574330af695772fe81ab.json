{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Projects\\\\photos-next\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport unsplash from '../api/unsplash';\nimport Layout from '../components/Layout.js';\nimport Main from '../components/Main.js';\nimport Home from './about';\nvar APIkey = 'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"getPhotos\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var pageNum,\n          responce,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pageNum = _args.length > 0 && _args[0] !== undefined ? _args[0] : 1;\n              _context.next = 3;\n              return unsplash.get();\n\n            case 3:\n              responce = _context.sent;\n              fetch(\"https://api.unsplash.com/photos/?client_id=\".concat(APIkey, \"&per_page=30&page=\").concat(pageNum)).then(function (res) {\n                return res.json();\n              }).then(function (jsonData) {\n                _this.setState({\n                  images: jsonData,\n                  pageNum: pageNum,\n                  isLoading: false\n                });\n              })[\"catch\"](function (error) {\n                return console.error('Ошибка при запросе данных: ', error);\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _this.searchPhotos = _this.searchPhotos.bind(_assertThisInitialized(_this));\n    _this.scrollPhotos = _this.scrollPhotos.bind(_assertThisInitialized(_this));\n    _this.getPhotos = _this.getPhotos.bind(_assertThisInitialized(_this));\n    _this.resetPhotos = _this.resetPhotos.bind(_assertThisInitialized(_this));\n    _this.state = {\n      images: [],\n      query: '',\n      pageNum: 1,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"searchPhotos\",\n    value: function () {\n      var _searchPhotos = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(query) {\n        var pageNum,\n            fetchResult,\n            images,\n            _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                pageNum = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : 1;\n                _context2.next = 3;\n                return fetch(\"https://api.unsplash.com/search/photos/?client_id=\".concat(APIkey, \"&query=\").concat(query, \"&page=\").concat(pageNum, \"&per_page=30\"));\n\n              case 3:\n                fetchResult = _context2.sent;\n                _context2.next = 6;\n                return fetchResult.json();\n\n              case 6:\n                images = _context2.sent;\n\n                if (images.total === 0) {\n                  this.setState({\n                    images: [],\n                    query: '',\n                    pageNum: 1,\n                    isLoading: false\n                  });\n                } else {\n                  sessionStorage.setItem('photos-query', query);\n                  sessionStorage.setItem('photos-pageNum', pageNum);\n                  this.setState({\n                    images: images.results,\n                    query: query,\n                    pageNum: pageNum,\n                    isLoading: false\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function searchPhotos(_x) {\n        return _searchPhotos.apply(this, arguments);\n      }\n\n      return searchPhotos;\n    }()\n  }, {\n    key: \"scrollPhotos\",\n    value: function () {\n      var _scrollPhotos = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(evt) {\n        var pageNum;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                pageNum = this.state.pageNum;\n                if (evt.target.id === 'prev30' && pageNum > 1) pageNum -= 1;\n                if (evt.target.id === 'next30') pageNum += 1;\n\n                if (!this.state.query) {\n                  _context3.next = 8;\n                  break;\n                }\n\n                _context3.next = 6;\n                return this.searchPhotos(this.state.query, pageNum);\n\n              case 6:\n                _context3.next = 10;\n                break;\n\n              case 8:\n                _context3.next = 10;\n                return this.getPhotos(pageNum);\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function scrollPhotos(_x2) {\n        return _scrollPhotos.apply(this, arguments);\n      }\n\n      return scrollPhotos;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var query, pageNum;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                query = sessionStorage.getItem('photos-query');\n                pageNum = sessionStorage.getItem('photos-pageNum');\n\n                if (!(query && pageNum)) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                _context4.next = 5;\n                return this.searchPhotos(query, pageNum);\n\n              case 5:\n                _context4.next = 9;\n                break;\n\n              case 7:\n                _context4.next = 9;\n                return this.getPhotos(1);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"resetPhotos\",\n    value: function () {\n      var _resetPhotos = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                sessionStorage.setItem('photos-query', '');\n                sessionStorage.setItem('photos-pageNum', 0);\n                this.setState({\n                  query: '',\n                  pageNum: 1\n                });\n                _context5.next = 5;\n                return this.getPhotos(1);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function resetPhotos() {\n        return _resetPhotos.apply(this, arguments);\n      }\n\n      return resetPhotos;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Layout, {\n        searchPhotos: this.searchPhotos,\n        scrollPhotos: this.scrollPhotos,\n        resetPhotos: this.resetPhotos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, this.state.isLoading ? React.createElement(\"h2\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Loading...\") : React.createElement(Main, {\n        data: this.state.images,\n        apiKey: APIkey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:\\Projects\\photos-next\\pages\\index.js"],"names":["fetch","Link","unsplash","Layout","Main","Home","APIkey","App","pageNum","get","responce","then","res","json","jsonData","setState","images","isLoading","error","console","searchPhotos","bind","scrollPhotos","getPhotos","resetPhotos","state","query","fetchResult","total","sessionStorage","setItem","results","evt","target","id","getItem","textAlign","marginTop","React","Component"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Link from 'next/link';\r\n\r\nimport unsplash from '../api/unsplash';\r\nimport Layout from '../components/Layout.js';\r\nimport Main from '../components/Main.js';\r\nimport Home from './about';\r\n\r\nconst APIkey =\r\n  'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.searchPhotos = this.searchPhotos.bind(this);\r\n    this.scrollPhotos = this.scrollPhotos.bind(this);\r\n    this.getPhotos = this.getPhotos.bind(this);\r\n    this.resetPhotos = this.resetPhotos.bind(this);\r\n\r\n    this.state = {\r\n      images: [],\r\n      query: '',\r\n      pageNum: 1,\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  getPhotos = async (pageNum = 1) => {\r\n    const responce = await unsplash.get()\r\n    fetch(\r\n      `https://api.unsplash.com/photos/?client_id=${APIkey}&per_page=30&page=${pageNum}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(jsonData => {\r\n        this.setState({\r\n          images: jsonData,\r\n          pageNum,\r\n          isLoading: false\r\n        });\r\n      })\r\n      .catch(error => console.error('Ошибка при запросе данных: ', error));\r\n  };\r\n\r\n  async searchPhotos(query, pageNum = 1) {\r\n    const fetchResult = await fetch(\r\n      `https://api.unsplash.com/search/photos/?client_id=${APIkey}&query=${query}&page=${pageNum}&per_page=30`\r\n    );\r\n    const images = await fetchResult.json();\r\n    if (images.total === 0) {\r\n      this.setState({\r\n        images: [],\r\n        query: '',\r\n        pageNum: 1,\r\n        isLoading: false\r\n      });\r\n    } else {\r\n      sessionStorage.setItem('photos-query', query);\r\n      sessionStorage.setItem('photos-pageNum', pageNum);\r\n      this.setState({\r\n        images: images.results,\r\n        query,\r\n        pageNum,\r\n        isLoading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  async scrollPhotos(evt) {\r\n    let pageNum = this.state.pageNum;\r\n    if (evt.target.id === 'prev30' && pageNum > 1) pageNum -= 1;\r\n    if (evt.target.id === 'next30') pageNum += 1;\r\n    if (this.state.query) {\r\n      await this.searchPhotos(this.state.query, pageNum);\r\n    } else {\r\n      await this.getPhotos(pageNum);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const query = sessionStorage.getItem('photos-query');\r\n    const pageNum = sessionStorage.getItem('photos-pageNum');\r\n    if (query && pageNum) {\r\n      await this.searchPhotos(query, pageNum);\r\n    } else {\r\n      await this.getPhotos(1);\r\n    }\r\n  }\r\n\r\n  async resetPhotos() {\r\n    sessionStorage.setItem('photos-query', '');\r\n    sessionStorage.setItem('photos-pageNum', 0);\r\n    this.setState({\r\n      query: '',\r\n      pageNum: 1\r\n    });\r\n    await this.getPhotos(1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout\r\n        searchPhotos={this.searchPhotos}\r\n        scrollPhotos={this.scrollPhotos}\r\n        resetPhotos={this.resetPhotos}\r\n      >\r\n        {this.state.isLoading ? (\r\n          <h2 style={{ textAlign: 'center', marginTop: '50%' }}>Loading...</h2>\r\n        ) : (\r\n          <Main data={this.state.images} apiKey={APIkey} />\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}