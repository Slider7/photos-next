{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Projects\\\\photos-next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport unsplash from '../api/unsplash';\nimport Layout from '../components/Layout.js';\nimport Main from '../components/Main.js';\nimport Home from './about';\nvar APIkey = 'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"getPhotos\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var pageNum,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pageNum = _args.length > 0 && _args[0] !== undefined ? _args[0] : 1;\n              _context.next = 3;\n              return _this.getPhotos(1);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    _this.searchPhotos = _this.searchPhotos.bind(_assertThisInitialized(_this));\n    _this.scrollPhotos = _this.scrollPhotos.bind(_assertThisInitialized(_this));\n    _this.resetPhotos = _this.resetPhotos.bind(_assertThisInitialized(_this));\n    _this.state = {\n      images: [],\n      query: '',\n      pageNum: 1,\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"resetPhotos\",\n    value: function () {\n      var _resetPhotos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                sessionStorage.setItem('photos-query', '');\n                sessionStorage.setItem('photos-pageNum', 0);\n                this.setState({\n                  query: '',\n                  pageNum: 1\n                });\n                _context2.next = 5;\n                return this.getPhotos(1);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function resetPhotos() {\n        return _resetPhotos.apply(this, arguments);\n      }\n\n      return resetPhotos;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        searchPhotos: this.searchPhotos,\n        scrollPhotos: this.scrollPhotos,\n        resetPhotos: this.resetPhotos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, this.state.isLoading ? __jsx(\"h2\", {\n        style: {\n          textAlign: 'center',\n          marginTop: '50%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, \"Loading...\") : __jsx(Main, {\n        data: this.state.images,\n        apiKey: APIkey,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Projects/photos-next/pages/index.js"],"names":["fetch","Link","unsplash","Layout","Main","Home","APIkey","App","pageNum","getPhotos","searchPhotos","bind","scrollPhotos","resetPhotos","state","images","query","isLoading","sessionStorage","setItem","setState","textAlign","marginTop","React","Component"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,IAAMC,MAAM,GACV,kEADF;;IAGqBC,G;;;;;AACnB,iBAAc;AAAA;;AAAA;;AACZ;;AADY,sIAcF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,cAAAA,OAAP,2DAAiB,CAAjB;AAAA;AAAA,qBAgEJ,MAAKC,SAAL,CAAe,CAAf,CAhEI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAdE;;AAEZ,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,+BAAnB;AAEA,UAAKG,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,KAAK,EAAE,EAFI;AAGXR,MAAAA,OAAO,EAAE,CAHE;AAIXS,MAAAA,SAAS,EAAE;AAJA,KAAb;AANY;AAYb;;;;;;;;;;AAsECC,gBAAAA,cAAc,CAACC,OAAf,CAAuB,cAAvB,EAAuC,EAAvC;AACAD,gBAAAA,cAAc,CAACC,OAAf,CAAuB,gBAAvB,EAAyC,CAAzC;AACA,qBAAKC,QAAL,CAAc;AACZJ,kBAAAA,KAAK,EAAE,EADK;AAEZR,kBAAAA,OAAO,EAAE;AAFG,iBAAd;;uBAIM,KAAKC,SAAL,CAAe,CAAf,C;;;;;;;;;;;;;;;;;;6BAGC;AACP,aACE,MAAC,MAAD;AACE,QAAA,YAAY,EAAE,KAAKC,YADrB;AAEE,QAAA,YAAY,EAAE,KAAKE,YAFrB;AAGE,QAAA,WAAW,EAAE,KAAKC,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKG,KAAKC,KAAL,CAAWG,SAAX,GACC;AAAI,QAAA,KAAK,EAAE;AAAEI,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,SAAS,EAAE;AAAlC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,GAGC,MAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,MAAvB;AAA+B,QAAA,MAAM,EAAET,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARJ,CADF;AAaD;;;;EA1G8BiB,KAAK,CAACC,S;;SAAlBjB,G","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Link from 'next/link';\r\n\r\nimport unsplash from '../api/unsplash';\r\nimport Layout from '../components/Layout.js';\r\nimport Main from '../components/Main.js';\r\nimport Home from './about';\r\n\r\nconst APIkey =\r\n  'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.searchPhotos = this.searchPhotos.bind(this);\r\n    this.scrollPhotos = this.scrollPhotos.bind(this);\r\n    this.resetPhotos = this.resetPhotos.bind(this);\r\n\r\n    this.state = {\r\n      images: [],\r\n      query: '',\r\n      pageNum: 1,\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  getPhotos = async (pageNum = 1) => {\r\n    /*const responce = await unsplash.get('search/photos', {\r\n      params: { per_page: 15, page: pageNum }\r\n    });\r\n    this.setState({ images: responce.data.results });\r\n    \r\n    fetch(\r\n      `https://api.unsplash.com/photos/?client_id=${APIkey}&per_page=30&page=${pageNum}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(jsonData => {\r\n        this.setState({\r\n          images: jsonData,\r\n          pageNum,\r\n          isLoading: false\r\n        });\r\n      })\r\n      .catch(error => console.error('Ошибка при запросе данных: ', error));\r\n    \r\n  };\r\n\r\n  async searchPhotos(query, pageNum = 1) {\r\n    const fetchResult = await fetch(\r\n      `https://api.unsplash.com/search/photos/?client_id=${APIkey}&query=${query}&page=${pageNum}&per_page=30`\r\n    );\r\n    const images = await fetchResult.json();\r\n    if (images.total === 0) {\r\n      this.setState({\r\n        images: [],\r\n        query: '',\r\n        pageNum: 1,\r\n        isLoading: false\r\n      });\r\n    } else {\r\n      sessionStorage.setItem('photos-query', query);\r\n      sessionStorage.setItem('photos-pageNum', pageNum);\r\n      this.setState({\r\n        images: images.results,\r\n        query,\r\n        pageNum,\r\n        isLoading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  async scrollPhotos(evt) {\r\n    let pageNum = this.state.pageNum;\r\n    if (evt.target.id === 'prev30' && pageNum > 1) pageNum -= 1;\r\n    if (evt.target.id === 'next30') pageNum += 1;\r\n    if (this.state.query) {\r\n      await this.searchPhotos(this.state.query, pageNum);\r\n    } else {\r\n      await this.getPhotos(pageNum);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    /*const query = sessionStorage.getItem('photos-query');\r\n    const pageNum = sessionStorage.getItem('photos-pageNum');\r\n    if (query && pageNum) {\r\n      await this.searchPhotos(query, pageNum);\r\n    } else {\r\n      await this.getPhotos(1);\r\n    }*/\r\n    await this.getPhotos(1);\r\n  }\r\n\r\n  async resetPhotos() {\r\n    sessionStorage.setItem('photos-query', '');\r\n    sessionStorage.setItem('photos-pageNum', 0);\r\n    this.setState({\r\n      query: '',\r\n      pageNum: 1\r\n    });\r\n    await this.getPhotos(1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout\r\n        searchPhotos={this.searchPhotos}\r\n        scrollPhotos={this.scrollPhotos}\r\n        resetPhotos={this.resetPhotos}\r\n      >\r\n        {this.state.isLoading ? (\r\n          <h2 style={{ textAlign: 'center', marginTop: '50%' }}>Loading...</h2>\r\n        ) : (\r\n          <Main data={this.state.images} apiKey={APIkey} />\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}