{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\photos-next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport unsplash from '../api/unsplash';\nimport Layout from '../components/Layout.js';\nimport Main from '../components/Main.js';\nimport Home from './about';\nconst APIkey = 'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"getPhotos\", async (pageNum = 1) => {\n      const responce = await unsplash.get('photos/', {\n        params: {\n          page: pageNum\n        }\n      });\n      this.setState({\n        images: responce.data.results,\n        pageNum,\n        isLoading: false\n      });\n    });\n\n    _defineProperty(this, \"searchPhotos\", async (query, pageNum = 1) => {\n      const fetchResult = await fetch(`https://api.unsplash.com/search/photos/?client_id=${APIkey}&query=${query}&page=${pageNum}&per_page=30`);\n      const images = await fetchResult.json();\n\n      if (images.total === 0) {\n        this.setState({\n          images: [],\n          query: '',\n          pageNum: 1,\n          isLoading: false\n        });\n      } else {\n        sessionStorage.setItem('photos-query', query);\n        sessionStorage.setItem('photos-pageNum', pageNum);\n        this.setState({\n          images: images.results,\n          query,\n          pageNum,\n          isLoading: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"scrollPhotos\", async evt => {\n      let pageNum = this.state.pageNum;\n      if (evt.target.id === 'prev30' && pageNum > 1) pageNum -= 1;\n      if (evt.target.id === 'next30') pageNum += 1;\n\n      if (this.state.query) {\n        await this.searchPhotos(this.state.query, pageNum);\n      } else {\n        await this.getPhotos(pageNum);\n      }\n    });\n\n    _defineProperty(this, \"resetPhotos\", async () => {\n      sessionStorage.setItem('photos-query', '');\n      sessionStorage.setItem('photos-pageNum', 0);\n      this.setState({\n        query: '',\n        pageNum: 1\n      });\n      await this.getPhotos(1);\n    });\n\n    this.state = {\n      images: [],\n      query: '',\n      pageNum: 1,\n      isLoading: true\n    };\n  }\n\n  async componentDidMount() {\n    const query = sessionStorage.getItem('photos-query');\n    const pageNum = sessionStorage.getItem('photos-pageNum');\n\n    if (query && pageNum) {\n      await this.searchPhotos(query, pageNum);\n    } else {\n      await this.getPhotos(1);\n    }\n  }\n\n  render() {\n    return __jsx(Layout, {\n      searchPhotos: this.searchPhotos,\n      scrollPhotos: this.scrollPhotos,\n      resetPhotos: this.resetPhotos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? __jsx(\"h2\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Loading...\") : __jsx(Main, {\n      data: this.state.images,\n      apiKey: APIkey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/photos-next/pages/index.js"],"names":["fetch","Link","unsplash","Layout","Main","Home","APIkey","App","React","Component","constructor","pageNum","responce","get","params","page","setState","images","data","results","isLoading","query","fetchResult","json","total","sessionStorage","setItem","evt","state","target","id","searchPhotos","getPhotos","componentDidMount","getItem","render","scrollPhotos","resetPhotos","textAlign","marginTop"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Link from 'next/link';\r\n\r\nimport unsplash from '../api/unsplash';\r\nimport Layout from '../components/Layout.js';\r\nimport Main from '../components/Main.js';\r\nimport Home from './about';\r\n\r\nconst APIkey =\r\n  'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      images: [],\r\n      query: '',\r\n      pageNum: 1,\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  getPhotos = async (pageNum = 1) => {\r\n    const responce = await unsplash.get('photos/', { params: { page: pageNum }});\r\n    this.setState({\r\n      images: responce.data.results,\r\n      pageNum,\r\n      isLoading: false\r\n    });\r\n  };\r\n\r\n  searchPhotos = async (query, pageNum = 1) => {\r\n    const fetchResult = await fetch(\r\n      `https://api.unsplash.com/search/photos/?client_id=${APIkey}&query=${query}&page=${pageNum}&per_page=30`\r\n    );\r\n    const images = await fetchResult.json();\r\n    if (images.total === 0) {\r\n      this.setState({\r\n        images: [],\r\n        query: '',\r\n        pageNum: 1,\r\n        isLoading: false\r\n      });\r\n    } else {\r\n      sessionStorage.setItem('photos-query', query);\r\n      sessionStorage.setItem('photos-pageNum', pageNum);\r\n      this.setState({\r\n        images: images.results,\r\n        query,\r\n        pageNum,\r\n        isLoading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  scrollPhotos = async evt => {\r\n    let pageNum = this.state.pageNum;\r\n    if (evt.target.id === 'prev30' && pageNum > 1) pageNum -= 1;\r\n    if (evt.target.id === 'next30') pageNum += 1;\r\n    if (this.state.query) {\r\n      await this.searchPhotos(this.state.query, pageNum);\r\n    } else {\r\n      await this.getPhotos(pageNum);\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const query = sessionStorage.getItem('photos-query');\r\n    const pageNum = sessionStorage.getItem('photos-pageNum');\r\n    if (query && pageNum) {\r\n      await this.searchPhotos(query, pageNum);\r\n    } else {\r\n      await this.getPhotos(1);\r\n    }\r\n  }\r\n\r\n  resetPhotos = async () => {\r\n    sessionStorage.setItem('photos-query', '');\r\n    sessionStorage.setItem('photos-pageNum', 0);\r\n    this.setState({\r\n      query: '',\r\n      pageNum: 1\r\n    });\r\n    await this.getPhotos(1);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout\r\n        searchPhotos={this.searchPhotos}\r\n        scrollPhotos={this.scrollPhotos}\r\n        resetPhotos={this.resetPhotos}\r\n      >\r\n        {this.state.isLoading ? (\r\n          <h2 style={{ textAlign: 'center', marginTop: '50%' }}>Loading...</h2>\r\n        ) : (\r\n          <Main data={this.state.images} apiKey={APIkey} />\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}