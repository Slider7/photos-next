{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\photos-next\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'isomorphic-unfetch';\nimport Link from 'next/link';\nimport unsplash from '../api/unsplash';\nimport Layout from '../components/Layout.js';\nimport Main from '../components/Main.js';\nimport Home from './about';\nconst APIkey = 'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\nexport default class App extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"getPhotos\", async (pageNum = 1) => {\n      const responce = await unsplash.get('photos', {\n        params: {\n          per_page: 15,\n          page: pageNum\n        }\n      });\n      this.setState({\n        images: responce.data.results\n      });\n      /*\r\n      fetch(\r\n        `https://api.unsplash.com/photos/?client_id=${APIkey}&per_page=30&page=${pageNum}`\r\n      )\r\n        .then(res => res.json())\r\n        .then(jsonData => {\r\n          this.setState({\r\n            images: jsonData,\r\n            pageNum,\r\n            isLoading: false\r\n          });\r\n        })\r\n        .catch(error => console.error('Ошибка при запросе данных: ', error));\r\n      */\n    });\n\n    this.searchPhotos = this.searchPhotos.bind(this);\n    this.scrollPhotos = this.scrollPhotos.bind(this);\n    this.resetPhotos = this.resetPhotos.bind(this);\n    this.state = {\n      images: [],\n      query: '',\n      pageNum: 1,\n      isLoading: true\n    };\n  }\n\n  async searchPhotos(query, pageNum = 1) {\n    const fetchResult = await fetch(`https://api.unsplash.com/search/photos/?client_id=${APIkey}&query=${query}&page=${pageNum}&per_page=30`);\n    const images = await fetchResult.json();\n\n    if (images.total === 0) {\n      this.setState({\n        images: [],\n        query: '',\n        pageNum: 1,\n        isLoading: false\n      });\n    } else {\n      sessionStorage.setItem('photos-query', query);\n      sessionStorage.setItem('photos-pageNum', pageNum);\n      this.setState({\n        images: images.results,\n        query,\n        pageNum,\n        isLoading: false\n      });\n    }\n  }\n\n  async scrollPhotos(evt) {\n    let pageNum = this.state.pageNum;\n    if (evt.target.id === 'prev30' && pageNum > 1) pageNum -= 1;\n    if (evt.target.id === 'next30') pageNum += 1;\n\n    if (this.state.query) {\n      await this.searchPhotos(this.state.query, pageNum);\n    } else {\n      await this.getPhotos(pageNum);\n    }\n  }\n\n  async componentDidMount() {\n    const query = sessionStorage.getItem('photos-query');\n    const pageNum = sessionStorage.getItem('photos-pageNum');\n\n    if (query && pageNum) {\n      await this.searchPhotos(query, pageNum);\n    } else {\n      await this.getPhotos(1);\n    }\n  }\n\n  async resetPhotos() {\n    sessionStorage.setItem('photos-query', '');\n    sessionStorage.setItem('photos-pageNum', 0);\n    this.setState({\n      query: '',\n      pageNum: 1\n    });\n    await this.getPhotos(1);\n  }\n\n  render() {\n    return __jsx(Layout, {\n      searchPhotos: this.searchPhotos,\n      scrollPhotos: this.scrollPhotos,\n      resetPhotos: this.resetPhotos,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, this.state.isLoading ? __jsx(\"h2\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"Loading...\") : __jsx(Main, {\n      data: this.state.images,\n      apiKey: APIkey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Projects/photos-next/pages/index.js"],"names":["fetch","Link","unsplash","Layout","Main","Home","APIkey","App","React","Component","constructor","pageNum","responce","get","params","per_page","page","setState","images","data","results","searchPhotos","bind","scrollPhotos","resetPhotos","state","query","isLoading","fetchResult","json","total","sessionStorage","setItem","evt","target","id","getPhotos","componentDidMount","getItem","render","textAlign","marginTop"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Link from 'next/link';\r\n\r\nimport unsplash from '../api/unsplash';\r\nimport Layout from '../components/Layout.js';\r\nimport Main from '../components/Main.js';\r\nimport Home from './about';\r\n\r\nconst APIkey =\r\n  'add7029af557a934c8737dd2594d2345a4ae37d1bf154e524df5f07d9054daf2';\r\n\r\nexport default class App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.searchPhotos = this.searchPhotos.bind(this);\r\n    this.scrollPhotos = this.scrollPhotos.bind(this);\r\n    this.resetPhotos = this.resetPhotos.bind(this);\r\n\r\n    this.state = {\r\n      images: [],\r\n      query: '',\r\n      pageNum: 1,\r\n      isLoading: true\r\n    };\r\n  }\r\n\r\n  getPhotos = async (pageNum = 1) => {\r\n    const responce = await unsplash.get('photos', {\r\n      params: { per_page: 15, page: pageNum }\r\n    });\r\n    this.setState({ images: responce.data.results });\r\n    /*\r\n    fetch(\r\n      `https://api.unsplash.com/photos/?client_id=${APIkey}&per_page=30&page=${pageNum}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(jsonData => {\r\n        this.setState({\r\n          images: jsonData,\r\n          pageNum,\r\n          isLoading: false\r\n        });\r\n      })\r\n      .catch(error => console.error('Ошибка при запросе данных: ', error));\r\n    */\r\n  };\r\n\r\n  async searchPhotos(query, pageNum = 1) {\r\n    const fetchResult = await fetch(\r\n      `https://api.unsplash.com/search/photos/?client_id=${APIkey}&query=${query}&page=${pageNum}&per_page=30`\r\n    );\r\n    const images = await fetchResult.json();\r\n    if (images.total === 0) {\r\n      this.setState({\r\n        images: [],\r\n        query: '',\r\n        pageNum: 1,\r\n        isLoading: false\r\n      });\r\n    } else {\r\n      sessionStorage.setItem('photos-query', query);\r\n      sessionStorage.setItem('photos-pageNum', pageNum);\r\n      this.setState({\r\n        images: images.results,\r\n        query,\r\n        pageNum,\r\n        isLoading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  async scrollPhotos(evt) {\r\n    let pageNum = this.state.pageNum;\r\n    if (evt.target.id === 'prev30' && pageNum > 1) pageNum -= 1;\r\n    if (evt.target.id === 'next30') pageNum += 1;\r\n    if (this.state.query) {\r\n      await this.searchPhotos(this.state.query, pageNum);\r\n    } else {\r\n      await this.getPhotos(pageNum);\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const query = sessionStorage.getItem('photos-query');\r\n    const pageNum = sessionStorage.getItem('photos-pageNum');\r\n    if (query && pageNum) {\r\n      await this.searchPhotos(query, pageNum);\r\n    } else {\r\n      await this.getPhotos(1);\r\n    }\r\n  }\r\n\r\n  async resetPhotos() {\r\n    sessionStorage.setItem('photos-query', '');\r\n    sessionStorage.setItem('photos-pageNum', 0);\r\n    this.setState({\r\n      query: '',\r\n      pageNum: 1\r\n    });\r\n    await this.getPhotos(1);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout\r\n        searchPhotos={this.searchPhotos}\r\n        scrollPhotos={this.scrollPhotos}\r\n        resetPhotos={this.resetPhotos}\r\n      >\r\n        {this.state.isLoading ? (\r\n          <h2 style={{ textAlign: 'center', marginTop: '50%' }}>Loading...</h2>\r\n        ) : (\r\n          <Main data={this.state.images} apiKey={APIkey} />\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}